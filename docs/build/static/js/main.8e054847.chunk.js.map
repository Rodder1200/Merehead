{"version":3,"sources":["reducers/userReducer.js","reducers/index.js","actions/types.js","store.js","components/MainPage.js","actions/userActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","page","error","combineReducers","userState","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","MainPage","rowsPerPage","this","props","setPage","fetchUsers","_this$props","classes","userItems","map","user","index","react_default","a","createElement","TableRow_default","key","id","TableCell_default","name","surname","desc","preLoader","CircularProgress_default","className","progress","Paper_default","paper","Table_default","TableHead_default","TableBody_default","TablePagination_default","component","count","rowsPerPageOptions","onChangePage","event","Component","compose","withStyles","theme","padding","spacing","unit","margin","marginTop","width","maxWidth","minWidth","connect","value","dispatch","axios","get","concat","then","response","data","catch","message","storageValue","sessionStorage","getItem","setItem","parseInt","createMuiTheme","typography","useNextVariants","suppressDeprecationWarnings","App","styles","es","components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e054847.chunk.js","sourcesContent":["import { FETCH_USERS, SET_PAGE, ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  page: 0,\r\n  error: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    case SET_PAGE:\r\n      return {\r\n        ...state,\r\n        page: action.payload\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  userState: userReducer\r\n});\r\n","export const FETCH_USERS = \"FETCH_USERS\";\r\nexport const SET_PAGE = \"SET_PAGE\";\r\nexport const ERROR = \"ERROR\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { fetchUsers, setPage } from \"../actions/userActions\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: \"auto\",\r\n    marginTop: theme.spacing.unit * 2,\r\n    width: \"90%\",\r\n    maxWidth: \"1200px\",\r\n    minWidth: \"500px\"\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    rowsPerPage: 5\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.setPage();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchUsers();\r\n  }\r\n\r\n  render() {\r\n    const { users, classes, page, setPage, error } = this.props;\r\n    const { rowsPerPage } = this.state;\r\n\r\n    const userItems = users.map((user, index) =>\r\n      index < rowsPerPage * (page + 1) && index + 1 > rowsPerPage * page ? (\r\n        <TableRow key={user.id}>\r\n          <TableCell>{user.name}</TableCell>\r\n          <TableCell>{user.surname}</TableCell>\r\n          <TableCell>{user.desc}</TableCell>\r\n        </TableRow>\r\n      ) : null\r\n    );\r\n    const preLoader = error ? (\r\n      <div>\r\n        <h1>ERROR</h1>\r\n        <p>{error}</p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n        Loading ...\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        {userItems.length > 0 ? (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Surname</TableCell>\r\n                <TableCell>Description</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{userItems}</TableBody>\r\n          </Table>\r\n        ) : (\r\n          preLoader\r\n        )}\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[]}\r\n          page={page}\r\n          onChangePage={(event, page) => {\r\n            setPage(page);\r\n          }}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.userState.users,\r\n    page: state.userState.page,\r\n    error: state.userState.error\r\n  };\r\n}\r\n\r\nMainPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  fetchUsers: PropTypes.func.isRequired,\r\n  setPage: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(\r\n    mapStateToProps,\r\n    { fetchUsers, setPage }\r\n  )\r\n)(MainPage);\r\n","import { FETCH_USERS, SET_PAGE, ERROR } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchUsers = value => dispatch => {\r\n  axios\r\n    .get(\r\n      `${\"https://cors-anywhere.herokuapp.com/\"}http://dev.frevend.com/json/users.json`\r\n    )\r\n    .then(response => {\r\n      dispatch({\r\n        type: FETCH_USERS,\r\n        payload: response.data.users\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: error.message\r\n      });\r\n    });\r\n};\r\n\r\nexport const setPage = value => dispatch => {\r\n  let storageValue = sessionStorage.getItem(\"page\");\r\n  if (value || value === 0) {\r\n    sessionStorage.setItem(\"page\", value);\r\n  }\r\n  dispatch({\r\n    type: SET_PAGE,\r\n    payload: value ? parseInt(value) : parseInt(storageValue)\r\n  });\r\n  if (!value && !storageValue) {\r\n    dispatch({\r\n      type: SET_PAGE,\r\n      payload: 0\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport store from \"./store\";\nimport MainPage from \"./components/MainPage\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <MainPage />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}